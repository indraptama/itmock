* {
  box-sizing: border-box;
}




body {
  color: #444;
  font-size: 0.875rem;
  font-weight: 400;
  line-height: 1.5;
}

p {
  margin-bottom: 1.5em;
}


.Section-title {
  font-size: calc(1.25rem + 0.75 * ((100vw - 26.25rem) / 53.75));
  font-weight: 200;
  text-transform: capitalize;
}


h3 {
  font-size: 1.5rem;
  font-weight: 400;
  margin-bottom: 0;
}

h3,
.gamma,
.headline {
  font-size: 1.5rem;
  font-weight: 400;
  margin-bottom: 0;
}

/* components */
.Container {
  margin-left: auto;
  margin-right: auto;
  max-width: 960px;
  width: calc(100% - 2rem);
}
.Container--full {
  width: 100% !important;
}

.Container--small {
  max-width: 35em;
}

.Container--right {
  margin-right: 0;
}
/** @define Grid */

/**
 * Core grid component
 *
 * DO NOT apply dimension or offset utilities to the `Grid` element. All cell
 * widths and offsets should be applied to child grid cells.
 */

/* Grid container
   ========================================================================== */

/**
 * All content must be contained within child `Grid-cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 */

.Grid {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; /* 1 */
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
  margin: 0; /* 1 */
  padding: 0; /* 1 */
}

/**
 * Modifier: center align all grid cells
 */

.Grid--alignCenter {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
}

/**
 * Modifier: right align all grid cells
 */

.Grid--alignRight {
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

/**
 * Modifier: middle-align grid cells
 */

.Grid--alignMiddle {
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
              -ms-grid-row-align: center;
          align-items: center;
}

/**
 * Modifier: bottom-align grid cells
 */

.Grid--alignBottom {
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
      -ms-flex-align: end;
              -ms-grid-row-align: flex-end;
          align-items: flex-end;
}

/**
 * Modifier: allow cells to equal distribute width
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex - http://git.io/vllC7
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis - http://git.io/vllWx
 */

.Grid--fit > .Grid-cell {
  -webkit-box-flex: 1;
  -webkit-flex: 1 1 0%;
      -ms-flex: 1 1 0%;
          flex: 1 1 0%; /* 1 */
}

/**
 * Modifier: all cells match height of tallest cell in a row
 */

.Grid--equalHeight > .Grid-cell {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

/**
 * Modifier: gutters
 */

.Grid--withGutter {
  margin: 0 -10px;
}

.Grid--withGutter > .Grid-cell {
  padding: 0 10px;
}

/* Grid cell
   ========================================================================== */

/**
 * No explicit width by default. Rely on combining `Grid-cell` with a dimension
 * utility or a component class that extends 'Grid'.
 *
 * 1. Set flex items to full width by default
 */

.Grid-cell {
  box-sizing: inherit;
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 100%;
      -ms-flex: 0 0 100%;
          flex: 0 0 100%; /* 1 */
}

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `Grid` object.
 */

.Grid-cell--center {
  margin: 0 auto;
}
/** @define Media */

.Media {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
}

.Media {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

/* Media Modifer */

.Media-center {
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
              -ms-grid-row-align: center;
          align-items: center;
}

.Media-bottom {
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
      -ms-flex-align: end;
              -ms-grid-row-align: flex-end;
          align-items: flex-end;
}

/* Media Item */

.Media-img,
.Media-body {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.Media-body {
  -webkit-box-flex: 1;
  -webkit-flex: 1 1 auto;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto;
}

.Media--onSmall,
.Media--onMedium,
.Media--onLarge,
.Media--onXLarge {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
}

/* Media based on Viewport */
/** @define Button */

/**
 * The button classes are best applied to links and buttons.
 * These components can be used in forms, as calls to action, or as part of the
 * general UI of the site/app.
 */

/**
 * 1. Normalize `box-sizing` across all elements that this component could be
 *    applied to.
 * 2. Inherit text color from ancestor.
 * 3. Inherit font styles from ancestor.
 * 4. Prevent button text from being selectable.
 */

.Button {
  background: transparent;
  border-color: currentcolor;
  border-style: solid;
  border-width: 1px;
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  cursor: pointer;
  display: inline-block;
  font: inherit; /* 3 */
  margin: 0;
  padding: 0.4em 0.75em;
  position: relative;
  text-align: center;
  text-decoration: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; /* 4 */
}

/**
 * Remove excess padding and border in Firefox 4+
 */

.Button::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

.Button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

/**
 * UI states
 */

.Button:hover,
.Button:focus,
.Button:active,
.Button:focus {
  text-decoration: none;
}

.Button:disabled,
.Button.is-disabled {
  cursor: default;
  opacity: 0.6;
}
/** @define Button */
.Button {
  border-radius: 2px;
  font-size: 0.75rem;
  font-weight: 600;
  letter-spacing: 0.05em;
  padding: 0.35rem 1.5rem;
  text-transform: uppercase;
}

.Button--transparent {
  background-color: transparent;
  border: transparent;
}
.Figure--slideDown {
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  position: relative;
  -webkit-transform: scale3d(1, 1, 1);
          transform: scale3d(1, 1, 1);
  -webkit-transition: -webkit-transform 250ms ease;
  transition: -webkit-transform 250ms ease;
  transition: transform 250ms ease;
  transition: transform 250ms ease, -webkit-transform 250ms ease;
  z-index: 1;
}

.Figure--slideDown img {
  position: relative;
}

.Figure--slideDown figcaption {
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  background-color: #fff;
  bottom: 0;
  padding: 1rem;
  position: absolute;
  text-transform: capitalize;
  -webkit-transform: translate3d(0,0,0);
          transform: translate3d(0,0,0);
  -webkit-transition: -webkit-transform 250ms ease;
  transition: -webkit-transform 250ms ease;
  transition: transform 250ms ease;
  transition: transform 250ms ease, -webkit-transform 250ms ease;
  width: 100%;
  z-index: -1;
}

/* block */
.MainHeader {
	position: relative;
  background-color: #fff;
  box-shadow: 0 2px 5px 0px rgba(0,0,0,0);
}

.MainHeader.MainHeader-onScroll {
  box-shadow: 0 2px 5px 0px rgba(0,0,0,0.2);
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 9999;
}

.MainHeader .Container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  height: 48px;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
}

.MainHeader-logo img {
  height: 32px;
}

.MainHeader-nav {
  display: none;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
              -ms-grid-row-align: center;
          align-items: center;
}

.MainHeader-nav a {
  display: inline-block;
  line-height: 48px;
  letter-spacing: 0.2px;
  text-transform: uppercase;
  font-size: 0.75rem;
  font-weight: 700;
  text-decoration: none;
  padding: 0 1rem;
  -webkit-transition: all 200ms ease;
  transition: all 200ms ease;
  background-color: transparent;
  color: inherit;
}

.MainHeader-nav a:hover, .MainHeader-nav a:focus {
  background-color: #40cad6;
  -webkit-transition: all 200ms ease;
  transition: all 200ms ease;
  color: #fff;
}

.js-navToggle {
  height: 40px;
  width: 40px;
  line-height: 40px;
  padding: 0;
  margin:0;
  font-size: 24px;
  background-color: #40cad6;
  color: #fff;
  border-radius: 2px;
}

.MobileNav {
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 9999;
  background-color: #fff;
  display: none;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.MobileNav.is-active {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.MobileNav > .Container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.MobileNav .Container > a,
.MobileNav .Container > div {
  line-height: 48px;
  letter-spacing: 0.2px;
  text-transform: uppercase;
  font-size: 0.75rem;
  font-weight: 700;
  text-decoration: none;
  padding: 0 1rem;
  -webkit-transition: all 200ms ease;
  transition: all 200ms ease;
  background-color: transparent;
  color: inherit;
  width: 100%;
  text-decoration: none;
  color: inherit;
  border-bottom: 1px solid rgba(0,0,0,0.2);
}

.MobileNav .socialmed {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  text-align: center;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  height: 48px;
  border-bottom: none!important;
}

.MobileNav .socialmed a {
  text-decoration: none;
  height: 40px;
  width: 40px;
  line-height: 40px;
  margin-right: 1rem;
  vertical-align: middle;
}

.js-navToggleClose {
  position: absolute;
  right: 16px;
  height: 40px;
  width: 40px;
  line-height: 40px;
  padding: 0;
  margin:0;
  font-size: 24px;
  background-color: #40cad6;
  color: #fff;
  border-radius: 2px;
  text-decoration: none;
  text-align: center;
  top: 8px;
}
.Hero {
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  min-height: 100vh;
  overflow: hidden;
  position: relative;
  width: 100%;
}

.Hero-content {
  width: 100%;
}

.Hero-title {
  font-size: calc(2.125rem + 1.125 * ((100vw - 26.25rem) / 53.75));
  font-weight: 200;
  line-height: 1;
  margin-bottom: 0.5rem;
}

/* modifer */

.Hero--hight-oneTree {
  min-height: 66.66vh;
}

/* Utilities */
/** @define utilities */

/* Applies to flex container
   ========================================================================== */

/**
 * Container
 */

.u-flex {
  display: -webkit-box !important;
  display: -webkit-flex !important;
  display: -ms-flexbox !important;
  display: flex !important;
}

.u-flexInline {
  display: -webkit-inline-box !important;
  display: -webkit-inline-flex !important;
  display: -ms-inline-flexbox !important;
  display: inline-flex !important;
}

/**
 * Direction: row
 */

.u-flexRow {
  -webkit-box-orient: horizontal !important;
  -webkit-box-direction: normal !important;
  -webkit-flex-direction: row !important;
      -ms-flex-direction: row !important;
          flex-direction: row !important;
}

.u-flexRowReverse {
  -webkit-box-orient: horizontal !important;
  -webkit-box-direction: reverse !important;
  -webkit-flex-direction: row-reverse !important;
      -ms-flex-direction: row-reverse !important;
          flex-direction: row-reverse !important;
}

/**
 * Direction: column
 */

.u-flexCol {
  -webkit-box-orient: vertical !important;
  -webkit-box-direction: normal !important;
  -webkit-flex-direction: column !important;
      -ms-flex-direction: column !important;
          flex-direction: column !important;
}

.u-flexColReverse {
  -webkit-box-orient: vertical !important;
  -webkit-box-direction: reverse !important;
  -webkit-flex-direction: column-reverse !important;
      -ms-flex-direction: column-reverse !important;
          flex-direction: column-reverse !important;
}

/**
 * Wrap
 */

.u-flexWrap {
  -webkit-flex-wrap: wrap !important;
      -ms-flex-wrap: wrap !important;
          flex-wrap: wrap !important;
}

.u-flexNoWrap {
  -webkit-flex-wrap: nowrap !important;
      -ms-flex-wrap: nowrap !important;
          flex-wrap: nowrap !important;
}

.u-flexWrapReverse {
  -webkit-flex-wrap: wrap-reverse !important;
      -ms-flex-wrap: wrap-reverse !important;
          flex-wrap: wrap-reverse !important;
}

/**
 * Align items along the main axis of the current line of the flex container
 */

.u-flexJustifyStart {
  -webkit-box-pack: start !important;
  -webkit-justify-content: flex-start !important;
      -ms-flex-pack: start !important;
          justify-content: flex-start !important;
}

.u-flexJustifyEnd {
  -webkit-box-pack: end !important;
  -webkit-justify-content: flex-end !important;
      -ms-flex-pack: end !important;
          justify-content: flex-end !important;
}

.u-flexJustifyCenter {
  -webkit-box-pack: center !important;
  -webkit-justify-content: center !important;
      -ms-flex-pack: center !important;
          justify-content: center !important;
}

.u-flexJustifyBetween {
  -webkit-box-pack: justify !important;
  -webkit-justify-content: space-between !important;
      -ms-flex-pack: justify !important;
          justify-content: space-between !important;
}

.u-flexJustifyAround {
  -webkit-justify-content: space-around !important;
      -ms-flex-pack: distribute !important;
          justify-content: space-around !important;
}

/**
 * Align items in the cross axis of the current line of the flex container
 * Similar to `justify-content` but in the perpendicular direction
 */

.u-flexAlignItemsStart {
  -webkit-box-align: start !important;
  -webkit-align-items: flex-start !important;
      -ms-flex-align: start !important;
              -ms-grid-row-align: flex-start !important;
          align-items: flex-start !important;
}

.u-flexAlignItemsEnd {
  -webkit-box-align: end !important;
  -webkit-align-items: flex-end !important;
      -ms-flex-align: end !important;
              -ms-grid-row-align: flex-end !important;
          align-items: flex-end !important;
}

.u-flexAlignItemsCenter {
  -webkit-box-align: center !important;
  -webkit-align-items: center !important;
      -ms-flex-align: center !important;
              -ms-grid-row-align: center !important;
          align-items: center !important;
}

.u-flexAlignItemsStretch {
  -webkit-box-align: stretch !important;
  -webkit-align-items: stretch !important;
      -ms-flex-align: stretch !important;
              -ms-grid-row-align: stretch !important;
          align-items: stretch !important;
}

.u-flexAlignItemsBaseline {
  -webkit-box-align: baseline !important;
  -webkit-align-items: baseline !important;
      -ms-flex-align: baseline !important;
              -ms-grid-row-align: baseline !important;
          align-items: baseline !important;
}

/**
 * Aligns items within the flex container when there is extra space in the cross-axis
 *
 * Has no effect when there is only one line of flex items.
 */

.u-flexAlignContentStart {
  -webkit-align-content: flex-start !important;
      -ms-flex-line-pack: start !important;
          align-content: flex-start !important;
}

.u-flexAlignContentEnd {
  -webkit-align-content: flex-end !important;
      -ms-flex-line-pack: end !important;
          align-content: flex-end !important;
}

.u-flexAlignContentCenter {
  -webkit-align-content: center !important;
      -ms-flex-line-pack: center !important;
          align-content: center !important;
}

.u-flexAlignContentStretch {
  -webkit-align-content: stretch !important;
      -ms-flex-line-pack: stretch !important;
          align-content: stretch !important;
}

.u-flexAlignContentBetween {
  -webkit-align-content: space-between !important;
      -ms-flex-line-pack: justify !important;
          align-content: space-between !important;
}

.u-flexAlignContentAround {
  -webkit-align-content: space-around !important;
      -ms-flex-line-pack: distribute !important;
          align-content: space-around !important;
}

/**
 * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
 */

/* postcss-bem-linter: ignore */

.u-flex > *,
.u-flexInline > * {
  -webkit-flex-shrink: 1;
      -ms-flex-negative: 1;
          flex-shrink: 1; /* 1 */
}

/* Applies to flex items
   ========================================================================== */

/**
 * Override default alignment of single item when specified by `align-items`
 */

.u-flexAlignSelfStart {
  -webkit-align-self: flex-start !important;
      -ms-flex-item-align: start !important;
          align-self: flex-start !important;
}

.u-flexAlignSelfEnd {
  -webkit-align-self: flex-end !important;
      -ms-flex-item-align: end !important;
          align-self: flex-end !important;
}

.u-flexAlignSelfCenter {
  -webkit-align-self: center !important;
      -ms-flex-item-align: center !important;
          align-self: center !important;
}

.u-flexAlignSelfStretch {
  -webkit-align-self: stretch !important;
      -ms-flex-item-align: stretch !important;
          align-self: stretch !important;
}

.u-flexAlignSelfBaseline {
  -webkit-align-self: baseline !important;
      -ms-flex-item-align: baseline !important;
          align-self: baseline !important;
}

.u-flexAlignSelfAuto {
  -webkit-align-self: auto !important;
      -ms-flex-item-align: auto !important;
          align-self: auto !important;
}

/**
 * Change order without editing underlying HTML
 */

.u-flexOrderFirst {
  -webkit-box-ordinal-group: 0 !important;
  -webkit-order: -1 !important;
      -ms-flex-order: -1 !important;
          order: -1 !important;
}

.u-flexOrderLast {
  -webkit-box-ordinal-group: 2 !important;
  -webkit-order: 1 !important;
      -ms-flex-order: 1 !important;
          order: 1 !important;
}

.u-flexOrderNone {
  -webkit-box-ordinal-group: 1 !important;
  -webkit-order: 0 !important;
      -ms-flex-order: 0 !important;
          order: 0 !important;
}

/**
 * Specify the flex grow factor, which determines how much the flex item will
 * grow relative to the rest of the flex items in the flex container.
 *
 * Supports 1-5 proportions
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex - http://git.io/vllC7
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis - http://git.io/vllWx
 */

.u-flexGrow1 {
  -webkit-box-flex: 1 !important;
  -webkit-flex: 1 1 0% !important;
      -ms-flex: 1 1 0% !important;
          flex: 1 1 0% !important; /* 1 */
}

.u-flexGrow2 {
  -webkit-box-flex: 2 !important;
  -webkit-flex: 2 1 0% !important;
      -ms-flex: 2 1 0% !important;
          flex: 2 1 0% !important;
}

.u-flexGrow3 {
  -webkit-box-flex: 3 !important;
  -webkit-flex: 3 1 0% !important;
      -ms-flex: 3 1 0% !important;
          flex: 3 1 0% !important;
}

.u-flexGrow4 {
  -webkit-box-flex: 4 !important;
  -webkit-flex: 4 1 0% !important;
      -ms-flex: 4 1 0% !important;
          flex: 4 1 0% !important;
}

.u-flexGrow5 {
  -webkit-box-flex: 5 !important;
  -webkit-flex: 5 1 0% !important;
      -ms-flex: 5 1 0% !important;
          flex: 5 1 0% !important;
}

/**
 * Aligning with `auto` margins - http://www.w3.org/TR/css-flexbox-1/#auto-margins
 */

.u-flexExpandLeft {
  margin-left: auto !important;
}

.u-flexExpandRight {
  margin-right: auto !important;
}
/**
 * @define utilities
 * Size: breakpoint 1 (small)
 */
/**
 * @define utilities
 * Size: breakpoint 1 (medium)
 */
/**
 * @define utilities
 * Size: breakpoint 1 (large)
 */
/**
 * @define utilities
 * Sizing utilities
 */

/* Proportional widths
   ========================================================================== */

/**
 * Specify the proportional width of an object.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
 *
 * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
 *    http://git.io/vllMD
 */

/* postcss-bem-linter: ignore */

[class*="u-size"] {
  -webkit-flex-basis: auto !important;
      -ms-flex-preferred-size: auto !important;
          flex-basis: auto !important; /* 1 */
}

.u-size1of12 {
  width: 8.33333% !important;
}

.u-size1of10 {
  width: 10% !important;
}

.u-size1of8 {
  width: 12.5% !important;
}

.u-size1of6,
.u-size2of12 {
  width: 16.66667% !important;
}

.u-size1of5,
.u-size2of10 {
  width: 20% !important;
}

.u-size1of4,
.u-size2of8,
.u-size3of12 {
  width: 25% !important;
}

.u-size3of10 {
  width: 30% !important;
}

.u-size1of3,
.u-size2of6,
.u-size4of12 {
  width: 33.33333% !important;
}

.u-size3of8 {
  width: 37.5% !important;
}

.u-size2of5,
.u-size4of10 {
  width: 40% !important;
}

.u-size5of12 {
  width: 41.66667% !important;
}

.u-size1of2,
.u-size2of4,
.u-size3of6,
.u-size4of8,
.u-size5of10,
.u-size6of12 {
  width: 50% !important;
}

.u-size7of12 {
  width: 58.33333% !important;
}

.u-size3of5,
.u-size6of10 {
  width: 60% !important;
}

.u-size5of8 {
  width: 62.5% !important;
}

.u-size2of3,
.u-size4of6,
.u-size8of12 {
  width: 66.66667% !important;
}

.u-size7of10 {
  width: 70% !important;
}

.u-size3of4,
.u-size6of8,
.u-size9of12 {
  width: 75% !important;
}

.u-size4of5,
.u-size8of10 {
  width: 80% !important;
}

.u-size5of6,
.u-size10of12 {
  width: 83.33333% !important;
}

.u-size7of8 {
  width: 87.5% !important;
}

.u-size9of10 {
  width: 90% !important;
}

.u-size11of12 {
  width: 91.66667% !important;
}

/* Intrinsic widths
   ========================================================================== */

/**
 * Make an element fill the remaining space.
 *
 * 1. Be explicit to work around IE10 bug with shorthand flex - http://git.io/vllC7
 * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes - http://git.io/vllMt
 */

.u-sizeFill {
  -webkit-box-flex: 1 !important;
  -webkit-flex: 1 1 0% !important;
      -ms-flex: 1 1 0% !important;
          flex: 1 1 0% !important; /* 1 */
  -webkit-flex-basis: 0% !important;
      -ms-flex-preferred-size: 0% !important;
          flex-basis: 0% !important; /* 2 */
}

/**
 * An alternative method to make an element fill the remaining space.
 * Distributes space based on the initial width and height of the element
 *
 * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
 */

.u-sizeFillAlt {
  -webkit-box-flex: 1 !important;
  -webkit-flex: 1 1 auto !important;
      -ms-flex: 1 1 auto !important;
          flex: 1 1 auto !important;
  -webkit-flex-basis: auto !important;
      -ms-flex-preferred-size: auto !important;
          flex-basis: auto !important;
}

/**
 * Make an element the width of its parent.
 */

.u-sizeFull {
  box-sizing: border-box !important;
  display: block !important;
  width: 100% !important;
}
/**
 * @define utilities
 * Size: breakpoint 1 (small)
 */
/**
 * @define utilities
 * Size: breakpoint 2 (medium)
 */
/**
 * @define utilities
 * Size: breakpoint 3 (large)
 */
/**
 * Word breaking
 *
 * Break strings when their length exceeds the width of their container.
 */

.u-textBreak {
  word-wrap: break-word !important;
}

/**
 * Horizontal text alignment
 */

.u-textCenter {
  text-align: center !important;
}

.u-textLeft {
  text-align: left !important;
}

.u-textRight {
  text-align: right !important;
}

/**
 * Inherit the ancestor's text color.
 */

.u-textInheritColor {
  color: inherit !important;
}

/**
 * Enables font kerning in all browsers.
 * http://blog.typekit.com/2014/02/05/kerning-on-the-web/
 *
 * 1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
 * 2. Chrome (not Windows), Firefox, IE 10+
 * 3. Safari 7 and future browsers
 */

.u-textKern {
  text-rendering: optimizeLegibility; /* 1 */
  -webkit-font-feature-settings: "kern" 1;
          font-feature-settings: "kern" 1; /* 2 */
  -webkit-font-kerning: normal;
          font-kerning: normal; /* 3 */
}

/**
 * Prevent whitespace wrapping
 */

.u-textNoWrap {
  white-space: nowrap !important;
}

/**
 * Text truncation
 *
 * Prevent text from wrapping onto multiple lines, and truncate with an
 * ellipsis.
 *
 * 1. Ensure that the node has a maximum width after which truncation can
 *    occur.
 * 2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
 *    nodes.
 */

.u-textTruncate {
  max-width: 100%; /* 1 */
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
  word-wrap: normal !important; /* 2 */
}

.h1 { font-size: 2rem }
.h2 { font-size: 1.5rem }
.h3 { font-size: 1.25rem }
.h4 { font-size: 1rem }
.h5 { font-size: .875rem }
.h6 { font-size: .75rem }
.m0  { margin: 0 }
.mt0 { margin-top: 0 }
.mr0 { margin-right: 0 }
.mb0 { margin-bottom: 0 }
.ml0 { margin-left: 0 }

.m1  { margin: .5rem }
.mt1 { margin-top: .5rem }
.mr1 { margin-right: .5rem }
.mb1 { margin-bottom: .5rem }
.ml1 { margin-left: .5rem }

.m2  { margin: 1rem }
.mt2 { margin-top: 1rem }
.mr2 { margin-right: 1rem }
.mb2 { margin-bottom: 1rem }
.ml2 { margin-left: 1rem }

.m3  { margin: 2rem }
.mt3 { margin-top: 2rem }
.mr3 { margin-right: 2rem }
.mb3 { margin-bottom: 2rem }
.ml3 { margin-left: 2rem }

.m4  { margin: 4rem }
.mt4 { margin-top: 4rem }
.mr4 { margin-right: 4rem }
.mb4 { margin-bottom: 4rem }
.ml4 { margin-left: 4rem }

.mxn1 { margin-left: -.5rem; margin-right: -.5rem }
.mxn2 { margin-left: -1rem; margin-right: -1rem }
.mxn3 { margin-left: -2rem; margin-right: -2rem }
.mxn4 { margin-left: -4rem; margin-right: -4rem }
.p0  { padding: 0 }
.pt0 { padding-top: 0 }
.pr0 { padding-right: 0 }
.pb0 { padding-bottom: 0 }
.pl0 { padding-left: 0 }

.p1  { padding: .5rem }
.pt1 { padding-top: .5rem }
.pr1 { padding-right: .5rem }
.pb1 { padding-bottom: .5rem }
.pl1 { padding-left: .5rem }
.px1 { padding-left: .5rem; padding-right: .5rem }
.py1 { padding-top: .5rem; padding-bottom: .5rem }

.p2  { padding: 1rem }
.pt2 { padding-top: 1rem }
.pr2 { padding-right: 1rem }
.pb2 { padding-bottom: 1rem }
.pl2 { padding-left: 1rem }
.px2 { padding-left: 1rem; padding-right: 1rem }
.py2 { padding-top: 1rem; padding-bottom: 1rem }

.p3  { padding: 2rem }
.pt3 { padding-top: 2rem }
.pr3 { padding-right: 2rem }
.pb3 { padding-bottom: 2rem }
.pl3 { padding-left: 2rem }
.px3 { padding-left: 2rem; padding-right: 2rem }
.py3 { padding-top: 2rem; padding-bottom: 2rem }

.p4  { padding: 4rem }
.pt4 { padding-top: 4rem }
.pr4 { padding-right: 4rem }
.pb4 { padding-bottom: 4rem }
.pl4 { padding-left: 4rem }
.px4 { padding-left: 4rem; padding-right: 4rem }
.py4 { padding-top: 4rem; padding-bottom: 4rem }
.db  { display: block }
.dib { display: inline-block }
.di  { display: inline }
.dt  { display: table }
.dtc { display: table-cell }
.fl { float: left }
.fr { float: right }
.oh { overflow: hidden }

.cf::before,
.cf::after {
  content: ' ';
  display: table;
}

.cf::after {
  clear: both;
}
.c1  { box-sizing: border-box; width: 8.33333% }
.c2  { box-sizing: border-box; width: 16.66667% }
.c3  { box-sizing: border-box; width: 25% }
.c4  { box-sizing: border-box; width: 33.33333% }
.c5  { box-sizing: border-box; width: 41.66667% }
.c6  { box-sizing: border-box; width: 50% }
.c7  { box-sizing: border-box; width: 58.33333% }
.c8  { box-sizing: border-box; width: 66.66667% }
.c9  { box-sizing: border-box; width: 75% }
.c10 { box-sizing: border-box; width: 83.33333% }
.c11 { box-sizing: border-box; width: 91.66667% }
.c12 { box-sizing: border-box; width: 100% }

/* Variable */


html {
  background-color: #fcfcfc;
  font-family: "roboto";
  font-size: 100%;
  font-weight: 300;
  line-height: 1.5;
}

img {
  max-width: 100%;
  vertical-align: middle;
}

.hack-Grid-flipL .Grid:nth-child(2n+1) {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
  -webkit-flex-direction: row-reverse;
      -ms-flex-direction: row-reverse;
          flex-direction: row-reverse;
}

hr {
  border: 1px solid #eee;
}

.icon-medium {
  max-width: 64px;
}

.Section-header {
  margin-bottom: 3rem;
}

.bordered {
  border: 1px solid;
}

.thumb--medium {
  max-width: 256px;
  width: 100%;
}

.bg-white2 {
  background-color: #f3f3f3;
}

@media screen and (min-width: 1280px) {




  .Section-title {
    font-size: 2rem;
  }




  .Hero-title {
    font-size: 3.25rem;
  }
}

@media screen and (max-width: 420px) {




  .Section-title {
    font-size: 1.25rem;
  }




  .Hero-title {
    font-size: 2.125rem;
  }
}

@media  (max-width:640px) {




  .Media--onSmall {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }




  .MainHeader-nav {
    display: none;
  }

  /* Applies to flex container
     ========================================================================== */

  /**
   * Container
   */




  .u-sm-flex {
    display: -webkit-box !important;
    display: -webkit-flex !important;
    display: -ms-flexbox !important;
    display: flex !important;
  }




  .u-sm-flexInline {
    display: -webkit-inline-box !important;
    display: -webkit-inline-flex !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important;
  }

  /**
   * Direction: row
   */




  .u-sm-flexRow {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: normal !important;
    -webkit-flex-direction: row !important;
    -ms-flex-direction: row !important;
    flex-direction: row !important;
  }




  .u-sm-flexRowReverse {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: reverse !important;
    -webkit-flex-direction: row-reverse !important;
    -ms-flex-direction: row-reverse !important;
    flex-direction: row-reverse !important;
  }

  /**
   * Direction: column
   */




  .u-sm-flexCol {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: normal !important;
    -webkit-flex-direction: column !important;
    -ms-flex-direction: column !important;
    flex-direction: column !important;
  }




  .u-sm-flexColReverse {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: reverse !important;
    -webkit-flex-direction: column-reverse !important;
    -ms-flex-direction: column-reverse !important;
    flex-direction: column-reverse !important;
  }

  /**
   * Wrap
   */




  .u-sm-flexWrap {
    -webkit-flex-wrap: wrap !important;
    -ms-flex-wrap: wrap !important;
    flex-wrap: wrap !important;
  }




  .u-sm-flexNoWrap {
    -webkit-flex-wrap: nowrap !important;
    -ms-flex-wrap: nowrap !important;
    flex-wrap: nowrap !important;
  }




  .u-sm-flexWrapReverse {
    -webkit-flex-wrap: wrap-reverse !important;
    -ms-flex-wrap: wrap-reverse !important;
    flex-wrap: wrap-reverse !important;
  }

  /**
   * Align items along the main axis of the current line of the flex container
   */




  .u-sm-flexJustifyStart {
    -webkit-box-pack: start !important;
    -webkit-justify-content: flex-start !important;
    -ms-flex-pack: start !important;
    justify-content: flex-start !important;
  }




  .u-sm-flexJustifyEnd {
    -webkit-box-pack: end !important;
    -webkit-justify-content: flex-end !important;
    -ms-flex-pack: end !important;
    justify-content: flex-end !important;
  }




  .u-sm-flexJustifyCenter {
    -webkit-box-pack: center !important;
    -webkit-justify-content: center !important;
    -ms-flex-pack: center !important;
    justify-content: center !important;
  }




  .u-sm-flexJustifyBetween {
    -webkit-box-pack: justify !important;
    -webkit-justify-content: space-between !important;
    -ms-flex-pack: justify !important;
    justify-content: space-between !important;
  }




  .u-sm-flexJustifyAround {
    -webkit-justify-content: space-around !important;
    -ms-flex-pack: distribute !important;
    justify-content: space-around !important;
  }

  /**
   * Align items in the cross axis of the current line of the flex container
   * Similar to `justify-content` but in the perpendicular direction
   */




  .u-sm-flexAlignItemsStart {
    -webkit-box-align: start !important;
    -webkit-align-items: flex-start !important;
    -ms-flex-align: start !important;
    -ms-grid-row-align: flex-start !important;
    align-items: flex-start !important;
  }




  .u-sm-flexAlignItemsEnd {
    -webkit-box-align: end !important;
    -webkit-align-items: flex-end !important;
    -ms-flex-align: end !important;
    -ms-grid-row-align: flex-end !important;
    align-items: flex-end !important;
  }




  .u-sm-flexAlignItemsCenter {
    -webkit-box-align: center !important;
    -webkit-align-items: center !important;
    -ms-flex-align: center !important;
    -ms-grid-row-align: center !important;
    align-items: center !important;
  }




  .u-sm-flexAlignItemsStretch {
    -webkit-box-align: stretch !important;
    -webkit-align-items: stretch !important;
    -ms-flex-align: stretch !important;
    -ms-grid-row-align: stretch !important;
    align-items: stretch !important;
  }




  .u-sm-flexAlignItemsBaseline {
    -webkit-box-align: baseline !important;
    -webkit-align-items: baseline !important;
    -ms-flex-align: baseline !important;
    -ms-grid-row-align: baseline !important;
    align-items: baseline !important;
  }

  /**
   * Aligns items within the flex container when there is extra space in the cross-axis
   *
   * Has no effect when there is only one line of flex items.
   */




  .u-sm-flexAlignContentStart {
    -webkit-align-content: flex-start !important;
    -ms-flex-line-pack: start !important;
    align-content: flex-start !important;
  }




  .u-sm-flexAlignContentEnd {
    -webkit-align-content: flex-end !important;
    -ms-flex-line-pack: end !important;
    align-content: flex-end !important;
  }




  .u-sm-flexAlignContentCenter {
    -webkit-align-content: center !important;
    -ms-flex-line-pack: center !important;
    align-content: center !important;
  }




  .u-sm-flexAlignContentStretch {
    -webkit-align-content: stretch !important;
    -ms-flex-line-pack: stretch !important;
    align-content: stretch !important;
  }




  .u-sm-flexAlignContentBetween {
    -webkit-align-content: space-between !important;
    -ms-flex-line-pack: justify !important;
    align-content: space-between !important;
  }




  .u-sm-flexAlignContentAround {
    -webkit-align-content: space-around !important;
    -ms-flex-line-pack: distribute !important;
    align-content: space-around !important;
  }

  /**
   * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
   */

  /* postcss-bem-linter: ignore */




  .u-sm-flex > *,
  .u-sm-flexInline > * {
    -webkit-flex-shrink: 1;
    -ms-flex-negative: 1;
    flex-shrink: 1;

    /* 1 */
  }

  /* Applies to flex items
     ========================================================================== */

  /**
   * Override default alignment of single item when specified by `align-items`
   */




  .u-sm-flexAlignSelfStart {
    -webkit-align-self: flex-start !important;
    -ms-flex-item-align: start !important;
    align-self: flex-start !important;
  }




  .u-sm-flexAlignSelfEnd {
    -webkit-align-self: flex-end !important;
    -ms-flex-item-align: end !important;
    align-self: flex-end !important;
  }




  .u-sm-flexAlignSelfCenter {
    -webkit-align-self: center !important;
    -ms-flex-item-align: center !important;
    align-self: center !important;
  }




  .u-sm-flexAlignSelfStretch {
    -webkit-align-self: stretch !important;
    -ms-flex-item-align: stretch !important;
    align-self: stretch !important;
  }




  .u-sm-flexAlignSelfBaseline {
    -webkit-align-self: baseline !important;
    -ms-flex-item-align: baseline !important;
    align-self: baseline !important;
  }




  .u-sm-flexAlignSelfAuto {
    -webkit-align-self: auto !important;
    -ms-flex-item-align: auto !important;
    align-self: auto !important;
  }

  /**
   * Change order without editing underlying HTML
   */




  .u-sm-flexOrderFirst {
    -webkit-box-ordinal-group: 0 !important;
    -webkit-order: -1 !important;
    -ms-flex-order: -1 !important;
    order: -1 !important;
  }




  .u-sm-flexOrderLast {
    -webkit-box-ordinal-group: 2 !important;
    -webkit-order: 1 !important;
    -ms-flex-order: 1 !important;
    order: 1 !important;
  }




  .u-sm-flexOrderNone {
    -webkit-box-ordinal-group: 1 !important;
    -webkit-order: 0 !important;
    -ms-flex-order: 0 !important;
    order: 0 !important;
  }

  /**
   * Specify the flex grow factor, which determines how much the flex item will
   * grow relative to the rest of the flex items in the flex container.
   *
   * Supports 1-5 proportions
   *
   * 1. Provide all values to avoid IE10 bug with shorthand flex - http://git.io/vllC7
   *    Use `0%` to avoid bug in IE10/11 with unitless flex basis - http://git.io/vllWx
   */




  .u-sm-flexGrow1 {
    -webkit-box-flex: 1 !important;
    -webkit-flex: 1 1 0% !important;
    -ms-flex: 1 1 0% !important;
    flex: 1 1 0% !important;

    /* 1 */
  }




  .u-sm-flexGrow2 {
    -webkit-box-flex: 2 !important;
    -webkit-flex: 2 1 0% !important;
    -ms-flex: 2 1 0% !important;
    flex: 2 1 0% !important;
  }




  .u-sm-flexGrow3 {
    -webkit-box-flex: 3 !important;
    -webkit-flex: 3 1 0% !important;
    -ms-flex: 3 1 0% !important;
    flex: 3 1 0% !important;
  }




  .u-sm-flexGrow4 {
    -webkit-box-flex: 4 !important;
    -webkit-flex: 4 1 0% !important;
    -ms-flex: 4 1 0% !important;
    flex: 4 1 0% !important;
  }




  .u-sm-flexGrow5 {
    -webkit-box-flex: 5 !important;
    -webkit-flex: 5 1 0% !important;
    -ms-flex: 5 1 0% !important;
    flex: 5 1 0% !important;
  }

  /**
   * Aligning with `auto` margins - http://www.w3.org/TR/css-flexbox-1/#auto-margins
   */




  .u-sm-flexExpandLeft {
    margin-left: auto !important;
  }




  .u-sm-flexExpandRight {
    margin-right: auto !important;
  }

  /* Proportional widths: breakpoint 1 (small)
     ========================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   *
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   *    http://git.io/vllMD
   */

  /* postcss-bem-linter: ignore */




  [class*="u-sm-size"] {
    -webkit-flex-basis: auto !important;
    -ms-flex-preferred-size: auto !important;
    flex-basis: auto !important;

    /* 1 */
  }




  .u-sm-size1of12 {
    width: 8.33333% !important;
  }




  .u-sm-size1of10 {
    width: 10% !important;
  }




  .u-sm-size1of8 {
    width: 12.5% !important;
  }




  .u-sm-size1of6,
  .u-sm-size2of12 {
    width: 16.66667% !important;
  }




  .u-sm-size1of5,
  .u-sm-size2of10 {
    width: 20% !important;
  }




  .u-sm-size1of4,
  .u-sm-size2of8,
  .u-sm-size3of12 {
    width: 25% !important;
  }




  .u-sm-size3of10 {
    width: 30% !important;
  }




  .u-sm-size1of3,
  .u-sm-size2of6,
  .u-sm-size4of12 {
    width: 33.33333% !important;
  }




  .u-sm-size3of8 {
    width: 37.5% !important;
  }




  .u-sm-size2of5,
  .u-sm-size4of10 {
    width: 40% !important;
  }




  .u-sm-size5of12 {
    width: 41.66667% !important;
  }




  .u-sm-size1of2,
  .u-sm-size2of4,
  .u-sm-size3of6,
  .u-sm-size4of8,
  .u-sm-size5of10,
  .u-sm-size6of12 {
    width: 50% !important;
  }




  .u-sm-size7of12 {
    width: 58.33333% !important;
  }




  .u-sm-size3of5,
  .u-sm-size6of10 {
    width: 60% !important;
  }




  .u-sm-size5of8 {
    width: 62.5% !important;
  }




  .u-sm-size2of3,
  .u-sm-size4of6,
  .u-sm-size8of12 {
    width: 66.66667% !important;
  }




  .u-sm-size7of10 {
    width: 70% !important;
  }




  .u-sm-size3of4,
  .u-sm-size6of8,
  .u-sm-size9of12 {
    width: 75% !important;
  }




  .u-sm-size4of5,
  .u-sm-size8of10 {
    width: 80% !important;
  }




  .u-sm-size5of6,
  .u-sm-size10of12 {
    width: 83.33333% !important;
  }




  .u-sm-size7of8 {
    width: 87.5% !important;
  }




  .u-sm-size9of10 {
    width: 90% !important;
  }




  .u-sm-size11of12 {
    width: 91.66667% !important;
  }

  /* Intrinsic widths
     ========================================================================== */

  /**
   * Make an element fill the remaining space.
   *
   * 1. Be explicit to work around IE10 bug with shorthand flex - http://git.io/vllC7
   * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes - http://git.io/vllMt
   */




  .u-sm-sizeFill {
    -webkit-box-flex: 1 !important;
    -webkit-flex: 1 1 0% !important;
    -ms-flex: 1 1 0% !important;
    flex: 1 1 0% !important;

    /* 1 */
    -webkit-flex-basis: 0% !important;
    -ms-flex-preferred-size: 0% !important;
    flex-basis: 0% !important;

    /* 2 */
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * Distributes space based on the initial width and height of the element
   *
   * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
   */




  .u-sm-sizeFillAlt {
    -webkit-box-flex: 1 !important;
    -webkit-flex: 1 1 auto !important;
    -ms-flex: 1 1 auto !important;
    flex: 1 1 auto !important;
    -webkit-flex-basis: auto !important;
    -ms-flex-preferred-size: auto !important;
    flex-basis: auto !important;
  }

  /**
   * Make an element the width of its parent.
   */




  .u-sm-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }
}

@media (min-width:640px) {




  .Media--onMedium {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }




  .MainHeader-nav {
    display: none;
  }




  .Timeline {
    position: relative;
  }




  .Timeline::before {
    background-color: #40cad6;
    content: "";
    height: 100%;
    left: 50%;
    position: absolute;
    top: 0;
    -webkit-transform: translateX(-50%);
    transform: translateX(-50%);
    width: 2px;
  }




  .Timeline-item {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    margin-bottom: 1.5rem;
    position: relative;
  }




  .Timeline-item::before {
    background-color: #40cad6;
    border-radius: 500px;
    content: "";
    height: 24px;
    left: 50%;
    position: absolute;
    top: 50%;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    width: 24px;
  }




  .Timeline-item > * {
    -webkit-box-flex: 1;
    -webkit-flex: 1 1 0;
    -ms-flex: 1 1 0;
    flex: 1 1 0;
  }




  .Timeline-item:nth-child(2n+1) {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;
    -webkit-flex-direction: row-reverse;
    -ms-flex-direction: row-reverse;
    flex-direction: row-reverse;
  }




  .Timeline-item:nth-child(2n+2) {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }




  .Timeline:nth-child(2n+1) .Timeline-content {
    margin-right: 3rem;
    text-align: right;
  }




  .Timeline:nth-child(2n+1) .Timeline-img {
    margin-left: 3rem;
    text-align: left;
  }




  .Timeline-item:nth-child(2n+2) .Timeline-content {
    margin-left: 3rem;
    text-align: left;
  }




  .Timeline-item:nth-child(2n+2) .Timeline-img {
    margin-right: 3rem;
    text-align: right;
  }

  /* Applies to flex container
     ========================================================================== */

  /**
   * Container
   */




  .u-md-flex {
    display: -webkit-box !important;
    display: -webkit-flex !important;
    display: -ms-flexbox !important;
    display: flex !important;
  }




  .u-md-flexInline {
    display: -webkit-inline-box !important;
    display: -webkit-inline-flex !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important;
  }

  /**
   * Direction: row
   */




  .u-md-flexRow {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: normal !important;
    -webkit-flex-direction: row !important;
    -ms-flex-direction: row !important;
    flex-direction: row !important;
  }




  .u-md-flexRowReverse {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: reverse !important;
    -webkit-flex-direction: row-reverse !important;
    -ms-flex-direction: row-reverse !important;
    flex-direction: row-reverse !important;
  }

  /**
   * Direction: column
   */




  .u-md-flexCol {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: normal !important;
    -webkit-flex-direction: column !important;
    -ms-flex-direction: column !important;
    flex-direction: column !important;
  }




  .u-md-flexColReverse {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: reverse !important;
    -webkit-flex-direction: column-reverse !important;
    -ms-flex-direction: column-reverse !important;
    flex-direction: column-reverse !important;
  }

  /**
   * Wrap
   */




  .u-md-flexWrap {
    -webkit-flex-wrap: wrap !important;
    -ms-flex-wrap: wrap !important;
    flex-wrap: wrap !important;
  }




  .u-md-flexNoWrap {
    -webkit-flex-wrap: nowrap !important;
    -ms-flex-wrap: nowrap !important;
    flex-wrap: nowrap !important;
  }




  .u-md-flexWrapReverse {
    -webkit-flex-wrap: wrap-reverse !important;
    -ms-flex-wrap: wrap-reverse !important;
    flex-wrap: wrap-reverse !important;
  }

  /**
   * Align items along the main axis of the current line of the flex container
   */




  .u-md-flexJustifyStart {
    -webkit-box-pack: start !important;
    -webkit-justify-content: flex-start !important;
    -ms-flex-pack: start !important;
    justify-content: flex-start !important;
  }




  .u-md-flexJustifyEnd {
    -webkit-box-pack: end !important;
    -webkit-justify-content: flex-end !important;
    -ms-flex-pack: end !important;
    justify-content: flex-end !important;
  }




  .u-md-flexJustifyCenter {
    -webkit-box-pack: center !important;
    -webkit-justify-content: center !important;
    -ms-flex-pack: center !important;
    justify-content: center !important;
  }




  .u-md-flexJustifyBetween {
    -webkit-box-pack: justify !important;
    -webkit-justify-content: space-between !important;
    -ms-flex-pack: justify !important;
    justify-content: space-between !important;
  }




  .u-md-flexJustifyAround {
    -webkit-justify-content: space-around !important;
    -ms-flex-pack: distribute !important;
    justify-content: space-around !important;
  }

  /**
   * Align items in the cross axis of the current line of the flex container
   * Similar to `justify-content` but in the perpendicular direction
   */




  .u-md-flexAlignItemsStart {
    -webkit-box-align: start !important;
    -webkit-align-items: flex-start !important;
    -ms-flex-align: start !important;
    -ms-grid-row-align: flex-start !important;
    align-items: flex-start !important;
  }




  .u-md-flexAlignItemsEnd {
    -webkit-box-align: end !important;
    -webkit-align-items: flex-end !important;
    -ms-flex-align: end !important;
    -ms-grid-row-align: flex-end !important;
    align-items: flex-end !important;
  }




  .u-md-flexAlignItemsCenter {
    -webkit-box-align: center !important;
    -webkit-align-items: center !important;
    -ms-flex-align: center !important;
    -ms-grid-row-align: center !important;
    align-items: center !important;
  }




  .u-md-flexAlignItemsStretch {
    -webkit-box-align: stretch !important;
    -webkit-align-items: stretch !important;
    -ms-flex-align: stretch !important;
    -ms-grid-row-align: stretch !important;
    align-items: stretch !important;
  }




  .u-md-flexAlignItemsBaseline {
    -webkit-box-align: baseline !important;
    -webkit-align-items: baseline !important;
    -ms-flex-align: baseline !important;
    -ms-grid-row-align: baseline !important;
    align-items: baseline !important;
  }

  /**
   * Aligns items within the flex container when there is extra space in the cross-axis
   *
   * Has no effect when there is only one line of flex items.
   */




  .u-md-flexAlignContentStart {
    -webkit-align-content: flex-start !important;
    -ms-flex-line-pack: start !important;
    align-content: flex-start !important;
  }




  .u-md-flexAlignContentEnd {
    -webkit-align-content: flex-end !important;
    -ms-flex-line-pack: end !important;
    align-content: flex-end !important;
  }




  .u-md-flexAlignContentCenter {
    -webkit-align-content: center !important;
    -ms-flex-line-pack: center !important;
    align-content: center !important;
  }




  .u-md-flexAlignContentStretch {
    -webkit-align-content: stretch !important;
    -ms-flex-line-pack: stretch !important;
    align-content: stretch !important;
  }




  .u-md-flexAlignContentBetween {
    -webkit-align-content: space-between !important;
    -ms-flex-line-pack: justify !important;
    align-content: space-between !important;
  }




  .u-md-flexAlignContentAround {
    -webkit-align-content: space-around !important;
    -ms-flex-line-pack: distribute !important;
    align-content: space-around !important;
  }

  /**
   * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
   */

  /* postcss-bem-linter: ignore */




  .u-md-flex > *,
  .u-md-flexInline > * {
    -webkit-flex-shrink: 1;
    -ms-flex-negative: 1;
    flex-shrink: 1;

    /* 1 */
  }

  /* Applies to flex items
     ========================================================================== */

  /**
   * Override default alignment of single item when specified by `align-items`
   */




  .u-md-flexAlignSelfStart {
    -webkit-align-self: flex-start !important;
    -ms-flex-item-align: start !important;
    align-self: flex-start !important;
  }




  .u-md-flexAlignSelfEnd {
    -webkit-align-self: flex-end !important;
    -ms-flex-item-align: end !important;
    align-self: flex-end !important;
  }




  .u-md-flexAlignSelfCenter {
    -webkit-align-self: center !important;
    -ms-flex-item-align: center !important;
    align-self: center !important;
  }




  .u-md-flexAlignSelfStretch {
    -webkit-align-self: stretch !important;
    -ms-flex-item-align: stretch !important;
    align-self: stretch !important;
  }




  .u-md-flexAlignSelfBaseline {
    -webkit-align-self: baseline !important;
    -ms-flex-item-align: baseline !important;
    align-self: baseline !important;
  }




  .u-md-flexAlignSelfAuto {
    -webkit-align-self: auto !important;
    -ms-flex-item-align: auto !important;
    align-self: auto !important;
  }

  /**
   * Change order without editing underlying HTML
   */




  .u-md-flexOrderFirst {
    -webkit-box-ordinal-group: 0 !important;
    -webkit-order: -1 !important;
    -ms-flex-order: -1 !important;
    order: -1 !important;
  }




  .u-md-flexOrderLast {
    -webkit-box-ordinal-group: 2 !important;
    -webkit-order: 1 !important;
    -ms-flex-order: 1 !important;
    order: 1 !important;
  }




  .u-md-flexOrderNone {
    -webkit-box-ordinal-group: 1 !important;
    -webkit-order: 0 !important;
    -ms-flex-order: 0 !important;
    order: 0 !important;
  }

  /**
   * Specify the flex grow factor, which determines how much the flex item will
   * grow relative to the rest of the flex items in the flex container.
   *
   * Supports 1-5 proportions
   *
   * 1. Provide all values to avoid IE10 bug with shorthand flex - http://git.io/vllC7
   *    Use `0%` to avoid bug in IE10/11 with unitless flex basis - http://git.io/vllWx
   */




  .u-md-flexGrow1 {
    -webkit-box-flex: 1 !important;
    -webkit-flex: 1 1 0% !important;
    -ms-flex: 1 1 0% !important;
    flex: 1 1 0% !important;

    /* 1 */
  }




  .u-md-flexGrow2 {
    -webkit-box-flex: 2 !important;
    -webkit-flex: 2 1 0% !important;
    -ms-flex: 2 1 0% !important;
    flex: 2 1 0% !important;
  }




  .u-md-flexGrow3 {
    -webkit-box-flex: 3 !important;
    -webkit-flex: 3 1 0% !important;
    -ms-flex: 3 1 0% !important;
    flex: 3 1 0% !important;
  }




  .u-md-flexGrow4 {
    -webkit-box-flex: 4 !important;
    -webkit-flex: 4 1 0% !important;
    -ms-flex: 4 1 0% !important;
    flex: 4 1 0% !important;
  }




  .u-md-flexGrow5 {
    -webkit-box-flex: 5 !important;
    -webkit-flex: 5 1 0% !important;
    -ms-flex: 5 1 0% !important;
    flex: 5 1 0% !important;
  }

  /**
   * Aligning with `auto` margins - http://www.w3.org/TR/css-flexbox-1/#auto-margins
   */




  .u-md-flexExpandLeft {
    margin-left: auto !important;
  }




  .u-md-flexExpandRight {
    margin-right: auto !important;
  }

  /* Proportional widths: breakpoint 2 (medium)
     ========================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   *
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   *    http://git.io/vllMD
   */

  /* postcss-bem-linter: ignore */




  [class*="u-md-size"] {
    -webkit-flex-basis: auto !important;
    -ms-flex-preferred-size: auto !important;
    flex-basis: auto !important;

    /* 1 */
  }




  .u-md-size1of12 {
    width: 8.33333% !important;
  }




  .u-md-size1of10 {
    width: 10% !important;
  }




  .u-md-size1of8 {
    width: 12.5% !important;
  }




  .u-md-size1of6,
  .u-md-size2of12 {
    width: 16.66667% !important;
  }




  .u-md-size1of5,
  .u-md-size2of10 {
    width: 20% !important;
  }




  .u-md-size1of4,
  .u-md-size2of8,
  .u-md-size3of12 {
    width: 25% !important;
  }




  .u-md-size3of10 {
    width: 30% !important;
  }




  .u-md-size1of3,
  .u-md-size2of6,
  .u-md-size4of12 {
    width: 33.33333% !important;
  }




  .u-md-size3of8 {
    width: 37.5% !important;
  }




  .u-md-size2of5,
  .u-md-size4of10 {
    width: 40% !important;
  }




  .u-md-size5of12 {
    width: 41.66667% !important;
  }




  .u-md-size1of2,
  .u-md-size2of4,
  .u-md-size3of6,
  .u-md-size4of8,
  .u-md-size5of10,
  .u-md-size6of12 {
    width: 50% !important;
  }




  .u-md-size7of12 {
    width: 58.33333% !important;
  }




  .u-md-size3of5,
  .u-md-size6of10 {
    width: 60% !important;
  }




  .u-md-size5of8 {
    width: 62.5% !important;
  }




  .u-md-size2of3,
  .u-md-size4of6,
  .u-md-size8of12 {
    width: 66.66667% !important;
  }




  .u-md-size7of10 {
    width: 70% !important;
  }




  .u-md-size3of4,
  .u-md-size6of8,
  .u-md-size9of12 {
    width: 75% !important;
  }




  .u-md-size4of5,
  .u-md-size8of10 {
    width: 80% !important;
  }




  .u-md-size5of6,
  .u-md-size10of12 {
    width: 83.33333% !important;
  }




  .u-md-size7of8 {
    width: 87.5% !important;
  }




  .u-md-size9of10 {
    width: 90% !important;
  }




  .u-md-size11of12 {
    width: 91.66667% !important;
  }

  /* Intrinsic widths
     ========================================================================== */

  /**
   * Make an element fill the remaining space.
   *
   * 1. Be explicit to work around IE10 bug with shorthand flex - http://git.io/vllC7
   * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes - http://git.io/vllMt
   */




  .u-md-sizeFill {
    -webkit-box-flex: 1 !important;
    -webkit-flex: 1 1 0% !important;
    -ms-flex: 1 1 0% !important;
    flex: 1 1 0% !important;

    /* 1 */
    -webkit-flex-basis: 0% !important;
    -ms-flex-preferred-size: 0% !important;
    flex-basis: 0% !important;

    /* 2 */
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * Distributes space based on the initial width and height of the element
   *
   * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
   */




  .u-md-sizeFillAlt {
    -webkit-box-flex: 1 !important;
    -webkit-flex: 1 1 auto !important;
    -ms-flex: 1 1 auto !important;
    flex: 1 1 auto !important;
    -webkit-flex-basis: auto !important;
    -ms-flex-preferred-size: auto !important;
    flex-basis: auto !important;
  }

  /**
   * Make an element the width of its parent.
   */




  .u-md-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }




  .u-md-col2 {
    -webkit-column-count: 2;
    -moz-column-count: 2;
    column-count: 2;
  }
}

@media (min-width:960px) {




  .Media--onLarge {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }




  .Figure--slideDown:hover, .Figure--slideDown:focus {
    box-shadow: 0 1px 10px 0 rgba(0,0,0,0.2);
    -webkit-transform: scale3d(1.1, 1.1 ,1.1);
    transform: scale3d(1.1, 1.1 ,1.1);
    -webkit-transition: -webkit-transform 250ms ease;
    transition: -webkit-transform 250ms ease;
    transition: transform 250ms ease;
    transition: transform 250ms ease, -webkit-transform 250ms ease;
    z-index: 2;
  }




  .Figure--slideDown:hover figcaption, .Figure--slideDown:focus figcaption {
    box-shadow: 0 1px 10px 0 rgba(0,0,0,0.2);
    -webkit-transform: translate3d(0,50px,0);
    transform: translate3d(0,50px,0);
    -webkit-transition: -webkit-transform 250ms ease;
    transition: -webkit-transform 250ms ease;
    transition: transform 250ms ease;
    transition: transform 250ms ease, -webkit-transform 250ms ease;
    -webkit-transition-delay: 100ms;
    transition-delay: 100ms;
  }




  .js-navToggle {
    display: none;
  }




  .MainHeader-nav {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
  }

  /* Applies to flex container
     ========================================================================== */

  /**
   * Container
   */




  .u-lg-flex {
    display: -webkit-box !important;
    display: -webkit-flex !important;
    display: -ms-flexbox !important;
    display: flex !important;
  }




  .u-lg-flexInline {
    display: -webkit-inline-box !important;
    display: -webkit-inline-flex !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important;
  }

  /**
   * Direction: row
   */




  .u-lg-flexRow {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: normal !important;
    -webkit-flex-direction: row !important;
    -ms-flex-direction: row !important;
    flex-direction: row !important;
  }




  .u-lg-flexRowReverse {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: reverse !important;
    -webkit-flex-direction: row-reverse !important;
    -ms-flex-direction: row-reverse !important;
    flex-direction: row-reverse !important;
  }

  /**
   * Direction: column
   */




  .u-lg-flexCol {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: normal !important;
    -webkit-flex-direction: column !important;
    -ms-flex-direction: column !important;
    flex-direction: column !important;
  }




  .u-lg-flexColReverse {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: reverse !important;
    -webkit-flex-direction: column-reverse !important;
    -ms-flex-direction: column-reverse !important;
    flex-direction: column-reverse !important;
  }

  /**
   * Wrap
   */




  .u-lg-flexWrap {
    -webkit-flex-wrap: wrap !important;
    -ms-flex-wrap: wrap !important;
    flex-wrap: wrap !important;
  }




  .u-lg-flexNoWrap {
    -webkit-flex-wrap: nowrap !important;
    -ms-flex-wrap: nowrap !important;
    flex-wrap: nowrap !important;
  }




  .u-lg-flexWrapReverse {
    -webkit-flex-wrap: wrap-reverse !important;
    -ms-flex-wrap: wrap-reverse !important;
    flex-wrap: wrap-reverse !important;
  }

  /**
   * Align items along the main axis of the current line of the flex container
   */




  .u-lg-flexJustifyStart {
    -webkit-box-pack: start !important;
    -webkit-justify-content: flex-start !important;
    -ms-flex-pack: start !important;
    justify-content: flex-start !important;
  }




  .u-lg-flexJustifyEnd {
    -webkit-box-pack: end !important;
    -webkit-justify-content: flex-end !important;
    -ms-flex-pack: end !important;
    justify-content: flex-end !important;
  }




  .u-lg-flexJustifyCenter {
    -webkit-box-pack: center !important;
    -webkit-justify-content: center !important;
    -ms-flex-pack: center !important;
    justify-content: center !important;
  }




  .u-lg-flexJustifyBetween {
    -webkit-box-pack: justify !important;
    -webkit-justify-content: space-between !important;
    -ms-flex-pack: justify !important;
    justify-content: space-between !important;
  }




  .u-lg-flexJustifyAround {
    -webkit-justify-content: space-around !important;
    -ms-flex-pack: distribute !important;
    justify-content: space-around !important;
  }

  /**
   * Align items in the cross axis of the current line of the flex container
   * Similar to `justify-content` but in the perpendicular direction
   */




  .u-lg-flexAlignItemsStart {
    -webkit-box-align: start !important;
    -webkit-align-items: flex-start !important;
    -ms-flex-align: start !important;
    -ms-grid-row-align: flex-start !important;
    align-items: flex-start !important;
  }




  .u-lg-flexAlignItemsEnd {
    -webkit-box-align: end !important;
    -webkit-align-items: flex-end !important;
    -ms-flex-align: end !important;
    -ms-grid-row-align: flex-end !important;
    align-items: flex-end !important;
  }




  .u-lg-flexAlignItemsCenter {
    -webkit-box-align: center !important;
    -webkit-align-items: center !important;
    -ms-flex-align: center !important;
    -ms-grid-row-align: center !important;
    align-items: center !important;
  }




  .u-lg-flexAlignItemsStretch {
    -webkit-box-align: stretch !important;
    -webkit-align-items: stretch !important;
    -ms-flex-align: stretch !important;
    -ms-grid-row-align: stretch !important;
    align-items: stretch !important;
  }




  .u-lg-flexAlignItemsBaseline {
    -webkit-box-align: baseline !important;
    -webkit-align-items: baseline !important;
    -ms-flex-align: baseline !important;
    -ms-grid-row-align: baseline !important;
    align-items: baseline !important;
  }

  /**
   * Aligns items within the flex container when there is extra space in the cross-axis
   *
   * Has no effect when there is only one line of flex items.
   */




  .u-lg-flexAlignContentStart {
    -webkit-align-content: flex-start !important;
    -ms-flex-line-pack: start !important;
    align-content: flex-start !important;
  }




  .u-lg-flexAlignContentEnd {
    -webkit-align-content: flex-end !important;
    -ms-flex-line-pack: end !important;
    align-content: flex-end !important;
  }




  .u-lg-flexAlignContentCenter {
    -webkit-align-content: center !important;
    -ms-flex-line-pack: center !important;
    align-content: center !important;
  }




  .u-lg-flexAlignContentStretch {
    -webkit-align-content: stretch !important;
    -ms-flex-line-pack: stretch !important;
    align-content: stretch !important;
  }




  .u-lg-flexAlignContentBetween {
    -webkit-align-content: space-between !important;
    -ms-flex-line-pack: justify !important;
    align-content: space-between !important;
  }




  .u-lg-flexAlignContentAround {
    -webkit-align-content: space-around !important;
    -ms-flex-line-pack: distribute !important;
    align-content: space-around !important;
  }

  /**
   * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
   */

  /* postcss-bem-linter: ignore */




  .u-lg-flex > *,
  .u-lg-flexInline > * {
    -webkit-flex-shrink: 1;
    -ms-flex-negative: 1;
    flex-shrink: 1;

    /* 1 */
  }

  /* Applies to flex items
     ========================================================================== */

  /**
   * Override default alignment of single item when specified by `align-items`
   */




  .u-lg-flexAlignSelfStart {
    -webkit-align-self: flex-start !important;
    -ms-flex-item-align: start !important;
    align-self: flex-start !important;
  }




  .u-lg-flexAlignSelfEnd {
    -webkit-align-self: flex-end !important;
    -ms-flex-item-align: end !important;
    align-self: flex-end !important;
  }




  .u-lg-flexAlignSelfCenter {
    -webkit-align-self: center !important;
    -ms-flex-item-align: center !important;
    align-self: center !important;
  }




  .u-lg-flexAlignSelfStretch {
    -webkit-align-self: stretch !important;
    -ms-flex-item-align: stretch !important;
    align-self: stretch !important;
  }




  .u-lg-flexAlignSelfBaseline {
    -webkit-align-self: baseline !important;
    -ms-flex-item-align: baseline !important;
    align-self: baseline !important;
  }




  .u-lg-flexAlignSelfAuto {
    -webkit-align-self: auto !important;
    -ms-flex-item-align: auto !important;
    align-self: auto !important;
  }

  /**
   * Change order without editing underlying HTML
   */




  .u-lg-flexOrderFirst {
    -webkit-box-ordinal-group: 0 !important;
    -webkit-order: -1 !important;
    -ms-flex-order: -1 !important;
    order: -1 !important;
  }




  .u-lg-flexOrderLast {
    -webkit-box-ordinal-group: 2 !important;
    -webkit-order: 1 !important;
    -ms-flex-order: 1 !important;
    order: 1 !important;
  }




  .u-lg-flexOrderNone {
    -webkit-box-ordinal-group: 1 !important;
    -webkit-order: 0 !important;
    -ms-flex-order: 0 !important;
    order: 0 !important;
  }

  /**
   * Specify the flex grow factor, which determines how much the flex item will
   * grow relative to the rest of the flex items in the flex container.
   *
   * Supports 1-5 proportions
   *
   * 1. Provide all values to avoid IE10 bug with shorthand flex - http://git.io/vllC7
   *    Use `0%` to avoid bug in IE10/11 with unitless flex basis - http://git.io/vllWx
   */




  .u-lg-flexGrow1 {
    -webkit-box-flex: 1 !important;
    -webkit-flex: 1 1 0% !important;
    -ms-flex: 1 1 0% !important;
    flex: 1 1 0% !important;

    /* 1 */
  }




  .u-lg-flexGrow2 {
    -webkit-box-flex: 2 !important;
    -webkit-flex: 2 1 0% !important;
    -ms-flex: 2 1 0% !important;
    flex: 2 1 0% !important;
  }




  .u-lg-flexGrow3 {
    -webkit-box-flex: 3 !important;
    -webkit-flex: 3 1 0% !important;
    -ms-flex: 3 1 0% !important;
    flex: 3 1 0% !important;
  }




  .u-lg-flexGrow4 {
    -webkit-box-flex: 4 !important;
    -webkit-flex: 4 1 0% !important;
    -ms-flex: 4 1 0% !important;
    flex: 4 1 0% !important;
  }




  .u-lg-flexGrow5 {
    -webkit-box-flex: 5 !important;
    -webkit-flex: 5 1 0% !important;
    -ms-flex: 5 1 0% !important;
    flex: 5 1 0% !important;
  }

  /**
   * Aligning with `auto` margins - http://www.w3.org/TR/css-flexbox-1/#auto-margins
   */




  .u-lg-flexExpandLeft {
    margin-left: auto !important;
  }




  .u-lg-flexExpandRight {
    margin-right: auto !important;
  }

  /* Proportional widths: breakpoint 3 (large)
     ========================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   *
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   *    http://git.io/vllMD
   */

  /* postcss-bem-linter: ignore */




  [class*="u-lg-size"] {
    -webkit-flex-basis: auto !important;
    -ms-flex-preferred-size: auto !important;
    flex-basis: auto !important;

    /* 1 */
  }




  .u-lg-size1of12 {
    width: 8.33333% !important;
  }




  .u-lg-size1of10 {
    width: 10% !important;
  }




  .u-lg-size1of8 {
    width: 12.5% !important;
  }




  .u-lg-size1of6,
  .u-lg-size2of12 {
    width: 16.66667% !important;
  }




  .u-lg-size1of5,
  .u-lg-size2of10 {
    width: 20% !important;
  }




  .u-lg-size1of4,
  .u-lg-size2of8,
  .u-lg-size3of12 {
    width: 25% !important;
  }




  .u-lg-size3of10 {
    width: 30% !important;
  }




  .u-lg-size1of3,
  .u-lg-size2of6,
  .u-lg-size4of12 {
    width: 33.33333% !important;
  }




  .u-lg-size3of8 {
    width: 37.5% !important;
  }




  .u-lg-size2of5,
  .u-lg-size4of10 {
    width: 40% !important;
  }




  .u-lg-size5of12 {
    width: 41.66667% !important;
  }




  .u-lg-size1of2,
  .u-lg-size2of4,
  .u-lg-size3of6,
  .u-lg-size4of8,
  .u-lg-size5of10,
  .u-lg-size6of12 {
    width: 50% !important;
  }




  .u-lg-size7of12 {
    width: 58.33333% !important;
  }




  .u-lg-size3of5,
  .u-lg-size6of10 {
    width: 60% !important;
  }




  .u-lg-size5of8 {
    width: 62.5% !important;
  }




  .u-lg-size2of3,
  .u-lg-size4of6,
  .u-lg-size8of12 {
    width: 66.66667% !important;
  }




  .u-lg-size7of10 {
    width: 70% !important;
  }




  .u-lg-size3of4,
  .u-lg-size6of8,
  .u-lg-size9of12 {
    width: 75% !important;
  }




  .u-lg-size4of5,
  .u-lg-size8of10 {
    width: 80% !important;
  }




  .u-lg-size5of6,
  .u-lg-size10of12 {
    width: 83.33333% !important;
  }




  .u-lg-size7of8 {
    width: 87.5% !important;
  }




  .u-lg-size9of10 {
    width: 90% !important;
  }




  .u-lg-size11of12 {
    width: 91.66667% !important;
  }

  /* Intrinsic widths
     ========================================================================== */

  /**
   * Make an element fill the remaining space.
   *
   * 1. Be explicit to work around IE10 bug with shorthand flex - http://git.io/vllC7
   * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes - http://git.io/vllMt
   */




  .u-lg-sizeFill {
    -webkit-box-flex: 1 !important;
    -webkit-flex: 1 1 0% !important;
    -ms-flex: 1 1 0% !important;
    flex: 1 1 0% !important;

    /* 1 */
    -webkit-flex-basis: 0% !important;
    -ms-flex-preferred-size: 0% !important;
    flex-basis: 0% !important;

    /* 2 */
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * Distributes space based on the initial width and height of the element
   *
   * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
   */




  .u-lg-sizeFillAlt {
    -webkit-box-flex: 1 !important;
    -webkit-flex: 1 1 auto !important;
    -ms-flex: 1 1 auto !important;
    flex: 1 1 auto !important;
    -webkit-flex-basis: auto !important;
    -ms-flex-preferred-size: auto !important;
    flex-basis: auto !important;
  }

  /**
   * Make an element the width of its parent.
   */




  .u-lg-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }




  html {
    font-size: 112.5%;
  }
}

@media (min-width:1280px) {




  .Media--onXLarge {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }
}

@media @import "./css/mainfooter.css" {




  .Timeline {
    position: relative;
  }




  .Timeline-item {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }




  .Timeline-img {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    margin-right: 1rem;
  }




  .Timeline-content {
    -webkit-box-flex: 4;
    -webkit-flex: 4;
    -ms-flex: 4;
    flex: 4;
  }




  @media (min-width:640px) {




    .Timeline {
      position: relative;
    }




    .Timeline::before {
      background-color: #40cad6;
      content: "";
      height: 100%;
      left: 50%;
      position: absolute;
      top: 0;
      -webkit-transform: translateX(-50%);
      transform: translateX(-50%);
      width: 2px;
    }




    .Timeline-item {
      -webkit-box-align: center;
      -webkit-align-items: center;
      -ms-flex-align: center;
      align-items: center;
      display: -webkit-box;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      margin-bottom: 1.5rem;
      position: relative;
    }




    .Timeline-item::before {
      background-color: #40cad6;
      border-radius: 500px;
      content: "";
      height: 24px;
      left: 50%;
      position: absolute;
      top: 50%;
      -webkit-transform: translate(-50%, -50%);
      transform: translate(-50%, -50%);
      width: 24px;
    }




    .Timeline-item > * {
      -webkit-box-flex: 1;
      -webkit-flex: 1 1 0;
      -ms-flex: 1 1 0;
      flex: 1 1 0;
    }




    .Timeline-item:nth-child(2n+1) {
      -webkit-box-orient: horizontal;
      -webkit-box-direction: reverse;
      -webkit-flex-direction: row-reverse;
      -ms-flex-direction: row-reverse;
      flex-direction: row-reverse;
    }




    .Timeline-item:nth-child(2n+2) {
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
      -webkit-flex-direction: row;
      -ms-flex-direction: row;
      flex-direction: row;
    }




    .Timeline:nth-child(2n+1) .Timeline-content {
      margin-right: 3rem;
      text-align: right;
    }




    .Timeline:nth-child(2n+1) .Timeline-img {
      margin-left: 3rem;
      text-align: left;
    }




    .Timeline-item:nth-child(2n+2) .Timeline-content {
      margin-left: 3rem;
      text-align: left;
    }




    .Timeline-item:nth-child(2n+2) .Timeline-img {
      margin-right: 3rem;
      text-align: right;
    }
  }
}

/*# sourceMappingURL=style.css.map */
